{"version":3,"sources":["./src/app/components/vendre-produit/vendre-produit.component.ts","./src/app/components/vendre-produit/vendre-produit.component.html","./src/environments/environment.ts","./src/app/components/nav/nav.component.ts","./src/app/components/nav/nav.component.html","./src/app/shared/services/panier.service.ts","./src/app/shared/services/auth.service.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/verify-email/verify-email.component.html","./src/app/components/verify-email/verify-email.component.ts","./src/app/components/sign-in/sign-in.component.ts","./src/app/components/sign-in/sign-in.component.html","./src/app/components/mon-panier/mon-panier.component.html","./src/app/components/mon-panier/mon-panier.component.ts","./src/app/app.module.ts","./src/app/shared/services/all-produits-gql.service.ts","./src/app/shared/guard/auth.guard.ts","./src/app/components/forgot-password/forgot-password.component.ts","./src/app/components/forgot-password/forgot-password.component.html","./src/app/shared/modules/graphql.module.ts","./src/app/components/acheter-produit/acheter-produit.component.ts","./src/app/components/acheter-produit/acheter-produit.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { Product } from 'src/app/shared/services/product';\n\n\n@Component({\n  selector: 'app-vendre-produit',\n  templateUrl: './vendre-produit.component.html',\n  styleUrls: ['./vendre-produit.component.scss']\n})\nexport class VendreProduitComponent implements OnInit {\n  userData: any; // Save logged in user data\n\n  constructor(public authService:AuthService, public afs: AngularFirestore, public router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  SetProductData(description,nom,poids,prix) {\n    const myId = this.afs.createId();\n    const productRef: AngularFirestoreDocument<any> = this.afs.doc(`products/${myId}`);\n    const productData: Product = {\n      uid: myId,\n      description: description,\n      nom: nom,\n      poids: poids,\n      prix: prix,\n      vendeur:this.authService.userData.uid\n    }\n    \n    return productRef.set(productData, {\n      merge: true\n    }).then(()=>\n      this.router.navigate(['acheter-produit'])\n    )\n  }\n\n}\n","<app-nav></app-nav>\n<!-- Sidebar navigation -->\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <form>\n        <div class=\"form-group\">\n          <label for=\"labelNom\">Nom du produit</label>\n          <input type=\"text\" class=\"form-control\" id=\"labelNom\" placeholder=\"Ex: Pomme\" #labelNom required>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"labelPoids\">Poids en kg</label>\n          <input type=\"text\" class=\"form-control\" id=\"labelPoids\" placeholder=\"Ex: 4 pour 4kg, 0.4 pour 400g\" #labelPoids required>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"labelPrix\">Prix</label>\n          <input type=\"text\" class=\"form-control\" id=\"labelPrix\" placeholder=\"Ex: 4.58 pour 4 euros et 58 cents\" #labelPrix required>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"textareaDescription\">Description</label>\n          <textarea class=\"form-control\" id=\"textareaDescription\" rows=\"3\" placeholder=\"Ex: Magnifique pomme verte.\" #textareaDescription required></textarea>\n        </div>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"SetProductData(textareaDescription.value,labelNom.value,labelPoids.value,labelPrix.value)\">Vendre</button>\n      </form>\n    </div>\n    \n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase:{\n    apiKey: \"AIzaSyDO3GRg3k_R4Xlge5HtB5MthKxJMhSzpQs\",\n    authDomain: \"info802-d8e44.firebaseapp.com\",\n    databaseURL: \"https://info802-d8e44-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"info802-d8e44\",\n    storageBucket: \"info802-d8e44.appspot.com\",\n    messagingSenderId: \"167671150783\",\n    appId: \"1:167671150783:web:16089bbe457792c2bd6e0a\",\n    measurementId: \"G-NXCBD8YYB5\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(public authService:AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  signOut(){\n    this.authService.SignOut();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\n    <a class=\"navbar-brand\" routerLink=\"/acheter-produit\">\n      <img src=\"../../../assets/marketplace.png\" alt=\"\" width=\"30\" height=\"24\" class=\"d-inline-block align-text-top\">\n      MarketPlace802\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n      <ul class=\"collapse navbar-collapse navbar-nav\" id=\"navbarNavAltMarkup\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/acheter-produit\">Acheter</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/vendre-produit\">Vendre</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/mon-panier\">Mon Panier</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/dashboard\">Mes Donnes</a>\n        </li>\n       </ul>\n       <ul class=\"collapse navbar-collapse navbar-nav justify-content-end\" id=\"navbarNavAltMarkup\">\n        <li class=\"nav-item\">\n          <button class=\"btn btn-danger\" (click)=\"signOut()\" type=\"button\">Se deconnecter</button>\n        </li>\n      </ul>\n  </nav>","import { Injectable } from '@angular/core';\nimport { Product } from './product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PanierService {\n\n  mesProduits = new Array<Product>();\n  constructor() { }\n\n  ajouter(product){\n    this.mesProduits.push(product);\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { User } from \"../services/user\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  public userData: User; // Save logged in user data\n\n  constructor(\n    public afs: AngularFirestore,   // Inject Firestore service\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\n    public router: Router,  \n    public ngZone: NgZone // NgZone service to remove outside scope warning\n  ) {    \n    /* Saving user data in localstorage when \n    logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    })\n  }\n  \n\n  // Sign in with email/password\n  SignIn(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n      \n  }\n\n  // Sign up with email/password\n  SignUp(name, email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        result.user.updateProfile({\n            displayName:name,\n            photoURL:\"../../../../assets/user.png\"\n          });\n        /* Call the SendVerificaitonMail() function when new user sign \n        up and returns promise */\n        this.SendVerificationMail();\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n\n  // Send email verfificaiton when new user sign up\n  SendVerificationMail() {\n    return this.afAuth.currentUser\n    .then((user) => {\n      user.sendEmailVerification()\n      this.router.navigate(['verify-email-address']);\n    })\n  }\n\n  // Reset Forggot password\n  ForgotPassword(passwordResetEmail) {\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\n    .then(() => {\n      window.alert('Password reset email sent, check your inbox.');\n      this.router.navigate(['sign-in']);\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  // Returns true when user is looged in and email is verified\n  isLoggedIn(){\n    const user = JSON.parse(localStorage.getItem('user'));\n    var res = false;\n    if(user !== null){\n        res = user.emailVerified;\n    }\n    if(res == null){\n      window.alert(\"Verifiez votre mail\")\n    }\n    return res;\n  }\n\n  // Auth logic to run auth providers\n  AuthLogin(provider) {\n    return this.afAuth.signInWithPopup(provider)\n    .then((result) => {\n       this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        })\n      this.SetUserData(result.user);\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  /* Setting up user data when sign in with username/password, \n  sign up with username/password and sign in with social auth  \n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  SetUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified,\n    }\n    return userRef.set(userData, {\n      merge: true\n    })\n  }\n\n  // Sign out \n  SignOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['sign-in']);\n    })\n  }\n\n}","<app-nav></app-nav>\n<!-- Sidebar navigation -->\n<div class=\"container\">\n  <div class=\"row\" *ngIf=\"authService.userData as user\">\n    <div class=\"col-md-12\">\n      <div class=\"media-body\">\n        <img src={{user.photoURL}}>\n        <h1><strong>{{user.photoURL}}</strong></h1>\n        <h1><strong>{{(user.displayName) ? user.displayName : 'User'}}</strong></h1>\n        <p>User ID: <strong>{{user.uid}}</strong></p>\n        <p>Email: <strong>{{user.email}}</strong></p>\n        <p>Email Verified: <strong>{{user.emailVerified}}</strong></p>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(public authService:AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'my-app';\n}\n","<router-outlet></router-outlet>","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <h3 class=\"text-center\">Thank You for Registering</h3>\n  \n        <div class=\"md-3 text-center\" *ngIf=\"authService.userData as user\">\n          <p class=\"text-center\">Un mail a été envoyé au <strong>{{user.email}}</strong>.</p>\n          <p class=\"text-center\">S'il vous plait, vérifiez votre boîte mail pour réinitialiser votre mot de passe.</p>\n        </div>\n        <div class=\"text-center\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"authService.SendVerificationMail()\">\n            Renvoyer le mail\n          </button>\n        </div>\n  \n      <div class=\"mb-3 text-center\">\n        <span>Revenir sur la page de connexion?<span class=\"link-primary\" routerLink=\"/sign-in\"> Se connecter</span></span>\n      </div>\n    </div> \n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.scss']\n})\nexport class VerifyEmailComponent implements OnInit {\n\n  constructor(public authService:AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder} from '@angular/forms';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n  SignInForm = this.formBuilder.group({\n    inputEmail: '',\n    inputPassword: ''\n  });\n\n  constructor(public authService:AuthService, public router: Router, public formBuilder:FormBuilder) { }\n\n  ngOnInit() :void {\n    const res = this.authService.isLoggedIn();\n    if(res == true) {\n      this.router.navigate(['acheter-produit'])\n    }\n  }\n\n  onSignIn() {\n    this.authService.SignIn(this.SignInForm.value[\"inputEmail\"],this.SignInForm.value[\"inputPassword\"]);\n    this.SignInForm.reset();\n    var tries = 0;\n    setTimeout(()=>this.router.navigate(['acheter-produit']),500);    \n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h1>Bonjour,</h1>\n        <h1>MarketPlace802</h1>\n      </div>\n      <div class=\"col\">\n        <h1>Se connecter</h1>\n        <form [formGroup]=\"SignInForm\" (ngSubmit)=\"onSignIn()\">\n          <div class=\"mb-3\">\n            <label for=\"inputEmail\" class=\"form-label\">Email</label>\n            <input type=\"email\" class=\"form-control\" formControlName=\"inputEmail\" id=\"inputEmail\">\n            <!--aria-describedby=\"emailHelp\"-->\n            <!--<div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>-->\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"inputPassword\" class=\"form-label\">Mot de passe</label>\n            <input type=\"password\" class=\"form-control\" formControlName=\"inputPassword\" id=\"inputPassword\">\n          </div>\n          <div class=\"mb-3\">\n            <span class=\"link-primary\" routerLink=\"/forgot-password\">Mot de passe oublié?</span>\n          </div>\n          <!--<div class=\"mb-3 form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"check\">\n          <label class=\"form-check-label\" for=\"check\">Rester connecter</label>\n        </div>-->\n          <button type=\"submit\" class=\"btn btn-primary\">Se connecter</button>\n        </form>\n        <div class=\"mb-3\">\n            <span>Je n'ai pas de compte?<span class=\"link-primary\" routerLink=\"/register-user\">S'inscrire</span></span>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","<app-nav></app-nav>\n<!-- Sidebar navigation -->\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12 bg-secondary rounded m-1 text-light\" *ngFor=\"let product of monPanier \">\n      <h5>{{ product.nom }} <span class=\"float-right\">prix :{{ product.prix }}€</span></h5>\n    </div>\n    <div class=\"col-md-12\" *ngIf=\"!vide()\">\n      <button type=\"button\" class=\"btn btn-primary float-right\" (click)=\"acheter()\">Acheter</button>\n    </div>\n    <div class=\"col-md-12\" *ngIf=\"vide()\">\n      <p>Aucun produit dans votre panier</p>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { PanierService } from 'src/app/shared/services/panier.service';\nimport { Product } from 'src/app/shared/services/product';\n\n@Component({\n  selector: 'app-mon-panier',\n  templateUrl: './mon-panier.component.html',\n  styleUrls: ['./mon-panier.component.scss']\n})\nexport class MonPanierComponent implements OnInit {\n\n  monPanier = new Array<Product>();\n  constructor(\n    public afs: AngularFirestore,\n    public authService: AuthService,\n    public panier: PanierService,\n    ) { }\n\n  ngOnInit(): void {\n    this.monPanier = this.panier.mesProduits;\n  }\n\n  acheter(){\n  }\n\n  vide(){\n    return this.monPanier.length==0;\n  }\n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// Firebase services + enviorment module\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage'\nimport { environment } from '../environments/environment';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\nimport { AuthService } from \"./shared/services/auth.service\";\nimport { AcheterProduitComponent } from './components/acheter-produit/acheter-produit.component';\nimport { VendreProduitComponent } from './components/vendre-produit/vendre-produit.component';\nimport { MonPanierComponent } from './components/mon-panier/mon-panier.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { GraphQLModule } from './shared/modules/graphql.module';\nimport { NavComponent } from './components/nav/nav.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    SignInComponent,\n    SignUpComponent,\n    ForgotPasswordComponent,\n    VerifyEmailComponent,\n    AcheterProduitComponent,\n    VendreProduitComponent,\n    MonPanierComponent,\n    NavComponent,\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    AngularFireStorageModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    GraphQLModule,\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Query, gql } from 'apollo-angular';\n\nexport interface Produit {\n  uid: string;\n  nom: string;\n  description: string;\n  prix: string;\n  poids: string;\n  vendeur: string;\n}\nexport interface Response {\n  produits: Produit[];\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllProduitsGQLService extends Query<Response> {\n\n  document = gql`\n  query{\n    produits\n    {\n        nodes{\n            produitID\n            nom\n            longitude\n            latitude\n        }\n    }\n  }\n  `;\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ){ }\n\n  async canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot) {\n      const res  = this.authService.isLoggedIn();\n      if(res !== true) {\n        this.router.navigate(['sign-in'])\n      }\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(public authService:AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-6 align-self-center\">\n            <h1>Réinitialiser mot de passe</h1>\n            <form>\n            <div class=\"mb-3\">\n                <label for=\"inputEmail\" class=\"form-label\">Email</label>\n                <input type=\"email\" class=\"form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\" #passwordResetEmail required>\n                <div id=\"emailHelp\" class=\"form-text\">Renseignez votre mail pour réinitialiser mot de passe </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-primary\" value=\"Reset Password\" (click)=\"authService.ForgotPassword(passwordResetEmail.value)\">Réinitialiser</button>\n            </form>\n            <div class=\"mb-3\">\n                <span>J'ai déjà un compte?<span class=\"link-primary\" routerLink=\"/sign-in\"> Se connecter</span></span>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { APOLLO_OPTIONS } from 'apollo-angular';\nimport { ApolloClientOptions, createHttpLink, InMemoryCache } from '@apollo/client/core';\nimport { HttpLink } from 'apollo-angular/http';\nimport { setContext } from '@apollo/client/link/context';\n\n\nconst uri = 'https://graphqlinfo802.azurewebsites.net/api'; // <-- add the URL of the GraphQL server here\n\nconst httpLink = createHttpLink({\n  uri: uri,\n});\n\nconst headers = {\n  'Origin': '*',\n  'Access-Control-Allow-Origin': 'https://info802.visarsylejmani.com/'\n\n  \n}\nconst enchancedFetch = (url, init) => {\n  return fetch(url, {\n      ...init,\n      headers: {\n          ...init.headers,\n          'Access-Control-Allow-Origin': '*',\n      },\n  }).then(response => response)\n}\nconst link = setContext(() => {\n  return {\n    credentials: 'include',\n    fetchOptions: {\n      mode:'cors'\n    },\n    headers: headers,\n    fetch: enchancedFetch,\n  }\n});\nexport function createApollo(): ApolloClientOptions<any> {\n  return {\n    link: link.concat(httpLink),\n    cache: new InMemoryCache()\n  };\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { PanierService } from 'src/app/shared/services/panier.service';\nimport { Product } from 'src/app/shared/services/product';\nimport { Apollo ,gql} from 'apollo-angular';\nimport { Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport { Produit, AllProduitsGQLService } from 'src/app/shared/services/all-produits-gql.service';\n\n\n\n\n\n\nconst GET_PRODUITS = gql`\n{\n  produits\n  {\n          produitID,\n          nom,\n          longitude,\n          latitude,\n  }\n}\n`;\n\n\n@Component({\n  selector: 'app-acheter-produit',\n  templateUrl: './acheter-produit.component.html',\n  styleUrls: ['./acheter-produit.component.scss']\n})\nexport class AcheterProduitComponent implements OnInit {\n  public productList = new Array<Product>();\n\n  loading: boolean;\n  produits: Observable<Produit[]>;\n\n\n\n  constructor(\n    public authService:AuthService,\n    public afs: AngularFirestore,\n    public panier:PanierService,\n    private apollo: Apollo,\n    private allProduitsGQL: AllProduitsGQLService\n    ) { }\n\n    ngOnInit() {\n      this.GetData();\n      this.produits = this.allProduitsGQL.watch()\n      .valueChanges\n      .pipe(\n        map(result => result.data.produits)\n      );\n    }\n  \n    ngOnDestroy() {\n    }\n\n  async GetData(){\n    const docs =  this.afs.collection(\"products\");\n    const products = await docs.get();\n    console.log(products.subscribe(r=>{\n      r.forEach(e=>{\n         this.productList.push(<Product>e.data());\n      })\n    }))\n    console.log(this.productList)\n  }\n  ajouterPanier(product){\n    this.panier.ajouter(product);\n  }\n}\n","<app-nav></app-nav>\n<!-- Sidebar navigation -->\n<div class=\"container\">\n  <div class=\"row\">\n    <table>\n      <thead>\n        <th>Uid</th>\n        <th>Nom</th>\n        <th>Poids</th>\n      </thead>\n      <tbody>\n          <tr *ngFor=\"let produit of produits | async\">\n            <td>{{produit.uid}}</td>\n            <td>{{produit.nom}}</td>\n            <td>{{produit.poids}}</td>\n          </tr>\n      </tbody>\n  </table>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  SignUpForm = this.formBuilder.group({\n    inputDisplayName:'',\n    inputEmail: '',\n    inputPassword: ''\n  });\n\n  constructor(public authService:AuthService, public formBuilder:FormBuilder, public router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSignUp() {\n    this.authService.SignUp(this.SignUpForm.value[\"inputDisplayName\"], this.SignUpForm.value[\"inputEmail\"],this.SignUpForm.value[\"inputPassword\"]);\n    this.SignUpForm.reset();\n    this.router.navigate(['acheter-produit']);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-6 align-self-center\">\n            <h1>S'inscrire</h1>\n            <form [formGroup]=\"SignUpForm\" (ngSubmit)=\"onSignUp()\">\n                <div class=\"mb-3\">\n                    <label for=\"inputDisplayName\" class=\"form-label\">Nom d'utilisateur</label>\n                    <input type=\"text\" class=\"form-control\" id=\"inputDisplayName\" formControlName=\"inputDisplayName\">\n                    <!--aria-describedby=\"emailHelp\"-->\n                    <!--<div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>-->\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"inputEmail\" class=\"form-label\">Email</label>\n                    <input type=\"email\" class=\"form-control\" id=\"inputEmail\" formControlName=\"inputEmail\">\n                    <!--aria-describedby=\"emailHelp\"-->\n                    <!--<div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>-->\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"inputPassword\" class=\"form-label\">Mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" id=\"inputPassword\" formControlName=\"inputPassword\">\n                </div>\n                <!--<div class=\"mb-3 form-check\">\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"check\">\n                <label class=\"form-check-label\" for=\"check\">Rester connecter</label>\n                </div>-->\n                <button type=\"submit\" class=\"btn btn-primary\">S'inscrire</button>\n            </form>\n            <div class=\"mb-3\">\n                <span>J'ai déjà un compte?<span class=\"link-primary\" routerLink=\"/sign-in\"> Se connecter</span></span>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\nimport { AcheterProduitComponent } from './components/acheter-produit/acheter-produit.component';\nimport { VendreProduitComponent } from './components/vendre-produit/vendre-produit.component';\nimport { MonPanierComponent } from './components/mon-panier/mon-panier.component';\n\n\nimport { AuthGuard } from \"./shared/guard/auth.guard\";\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/sign-in', pathMatch: 'full' },\n  { path: 'sign-in', component: SignInComponent },\n  { path: 'register-user', component: SignUpComponent },\n  { path: 'dashboard', component: DashboardComponent , canActivate: [AuthGuard]},\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'acheter-produit', component: AcheterProduitComponent , canActivate: [AuthGuard]},\n  { path: 'vendre-produit', component: VendreProduitComponent , canActivate: [AuthGuard]},\n  { path: 'mon-panier', component: MonPanierComponent , canActivate: [AuthGuard]},\n  { path: 'verify-email-address', component: VerifyEmailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}